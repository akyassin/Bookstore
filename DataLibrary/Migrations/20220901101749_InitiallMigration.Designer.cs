// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(BookstoreDbContext))]
    [Migration("20220901101749_InitiallMigration")]
    partial class InitiallMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataLibrary.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"), 1L, 1);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FullName = "Ahmad Yassin"
                        },
                        new
                        {
                            AuthorId = 2,
                            FullName = "Mohammad Abdulaal"
                        },
                        new
                        {
                            AuthorId = 3,
                            FullName = "Yassin Darwish"
                        },
                        new
                        {
                            AuthorId = 4,
                            FullName = "Yousef Sabri"
                        },
                        new
                        {
                            AuthorId = 5,
                            FullName = "Mikael Bros"
                        });
                });

            modelBuilder.Entity("DataLibrary.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Description = "No Desc",
                            ImageName = "",
                            ImageUrl = "",
                            Title = "C# For Programming"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            Description = "No Desc",
                            ImageName = "",
                            ImageUrl = "",
                            Title = "Java For Programming"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3,
                            Description = "No Desc",
                            ImageName = "",
                            ImageUrl = "",
                            Title = "Python For Programming"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4,
                            Description = "No Desc",
                            ImageName = "",
                            ImageUrl = "",
                            Title = "PHP For Programming"
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 5,
                            Description = "No Desc",
                            ImageName = "",
                            ImageUrl = "",
                            Title = "Clean Code"
                        });
                });

            modelBuilder.Entity("DataLibrary.Entities.Book", b =>
                {
                    b.HasOne("DataLibrary.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DataLibrary.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
